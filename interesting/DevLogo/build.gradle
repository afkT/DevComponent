plugins {
    id 'java-library'
    id 'org.jetbrains.kotlin.jvm'
}

java {
    sourceCompatibility = versions.javaVersion
    targetCompatibility = versions.javaVersion
}

dependencies {
    // DevJava - Java 工具类库 ( 不依赖 android api )
    api deps.dev.dev_java

    // ==========
    // = rt.jar =
    // ==========

    def rtJAR = "/lib/rt.jar"
    // 获取配置的 JDK 根目录 ( 可自行更换非 Android JDK )
    def homePath = System.properties['java.home']
    // 拼接路径
    def rtJARPath = "${homePath}${rtJAR}"
    // 文件不存在再去查询 JDK 路径
    if (!file(rtJARPath).exists()) {
        // 获取系统名
        def osName = System.getProperties().getProperty("os.name").toString()
        if (osName.toLowerCase().contains("mac")) {
            // 读取 MacOS 本地安装的 Java JDK Version 文件夹列表
            def userHome = System.getProperties().getProperty("user.home")
            def macOSJavaVM = userHome + "/Library/Java/JavaVirtualMachines"
            def macOSJVMFile = file(macOSJavaVM)
            if (macOSJVMFile.exists()) {
                def files = macOSJVMFile.listFiles()
                if (files != null && files.length > 0) {
                    def pathFormat = macOSJavaVM + "/%s/Contents/Home/jre" + rtJAR
                    for (def itFile : files) {
                        rtJARPath = String.format(pathFormat, itFile.getName())
                        if (file(rtJARPath).exists()) {
                            break
                        }
                    }
                }
            }
            // 找不到 rt.jar 文件则提示
            if (!file(rtJARPath).exists()) {
                println("macOS jvm rt.jar Not Found Exception")
                return
            }
        } else if (osName.toLowerCase().contains("windows")) {
            // 读取 Windows 本地安装的 Java JDK Version 文件夹列表
            def windowsJavaVM = "C:/Program Files/Java"
            def windowsJVMFile = file(windowsJavaVM)
            if (windowsJVMFile.exists()) {
                def files = windowsJVMFile.listFiles()
                if (files != null && files.length > 0) {
                    def pathFormat = windowsJavaVM + "/%s" + rtJAR
                    for (def itFile : files) {
                        rtJARPath = String.format(pathFormat, itFile.getName())
                        if (file(rtJARPath).exists()) {
                            break
                        }
                    }
                }
            }
            // 找不到 rt.jar 文件则提示
            if (!file(rtJARPath).exists()) {
                println("windows jvm rt.jar Not Found Exception")
                return
            }
        }
    }

    // 文件存在再依赖防止报错, 影响主工程
    if (file(rtJARPath).exists()) {
        compileOnly files(rtJARPath)
    }

    // rt.jar 文件路径
    println()
    println("====================")
    println("rt.jar file path => " + rtJARPath)
    println("rt.jar file exists => " + file(rtJARPath).exists())
    println("====================")
    println()

    // ==============
    // = 打印系统属性 =
    // ==============

//    println("\n\n系统属性:\n")
//    System.properties.stringPropertyNames().forEach {
//        println(it + " => " + System.properties[it])
//    }
}