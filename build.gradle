// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply from: rootProject.file("file/gradle/config.gradle")
apply from: rootProject.file(files.task_generate_deps_file_gradle)

buildscript {

    // Kotlin 版本
    ext.kotlin_version = "1.6.21"
    ext.kotlin_stdlib = "1.6.21"
    ext.matrix_version = "2.0.5"

    repositories { // 该 repositories 用于 buildscript dependencies 插件、脚本依赖加载
        // AliRepo 阿里仓库服务 https://maven.aliyun.com/mvn/view
        maven { url "https://maven.aliyun.com/repository/google" }
        maven { url "https://maven.aliyun.com/repository/public" }
        maven { url "https://maven.aliyun.com/repository/gradle-plugin" }

        google()

        // jitpack maven
        maven { url "https://jitpack.io" }

        maven { url "https://oss.sonatype.org/content/repositories/snapshots" }

        maven { url "https://repo1.maven.org/maven2/" }

        maven { url "https://plugins.gradle.org/m2" }
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:7.2.0'
        // kotlin https://mvnrepository.com/artifact/org.jetbrains.kotlin/kotlin-gradle-plugin
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        // ARouter AutoRegister
        classpath "com.alibaba:arouter-register:1.0.2"
        // Hilt 依赖注入
        classpath "com.google.dagger:hilt-android-gradle-plugin:2.40.5"
        // 美团多渠道打包
        classpath "com.meituan.android.walle:plugin:1.1.7"
    }
}

allprojects {
    repositories { // 该 repositories 用于 app、module dependencies 第三方库 implementation 等依赖加载
        google()

        // jitpack maven
        maven { url "https://jitpack.io" }

        maven { url "https://oss.sonatype.org/content/repositories/snapshots" }

        maven { url "https://repo1.maven.org/maven2/" }

        maven { url "https://plugins.gradle.org/m2" }
    }

//    gradle.projectsEvaluated {
//        tasks.withType(JavaCompile) {
//            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
//        }
//    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

// 全局编码设置
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// 第三方库版本强制统一处理
apply from: rootProject.file(files.unified_library_config_gradle)